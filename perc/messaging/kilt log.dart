{
  Message: [Getter],
  Messaging: {
    Message: [Getter],
    errorCheckDelegationData: [Getter],
    errorCheckMessageBody: [Getter],
    errorCheckMessage: [Getter],
    verifyRequiredCTypeProperties: [Getter],
    compressMessage: [Getter],
    decompressMessage: [Getter]
  },
  BlockchainUtils: [Getter],
  ChainHelpers: {
    ErrorHandler: [Getter],
    BlockchainApiConnection: [Getter],
    Blockchain: [Getter],
    BlockchainUtils: [Getter],
    SubscriptionPromise: [Getter]
  },
  Did: {
    Chain: {
      queryDetails: [AsyncFunction: queryDetails],
      queryKey: [AsyncFunction: queryKey],
      queryServiceEndpoints: [AsyncFunction: queryServiceEndpoints],
      queryServiceEndpoint: [AsyncFunction: queryServiceEndpoint],
      queryEndpointsCounts: [AsyncFunction: queryEndpointsCounts],
      queryNonce: [AsyncFunction: queryNonce],
      queryDidDeletionStatus: [AsyncFunction: queryDidDeletionStatus],
      queryDepositAmount: [AsyncFunction: queryDepositAmount],
      queryDeletedDidIdentifiers: [AsyncFunction: queryDeletedDidIdentifiers],
      formatPublicKey: [Function: formatPublicKey],
      generateCreateTxFromCreationDetails: [AsyncFunction: generateCreateTxFromCreationDetails],
      generateCreateTxFromDidDetails: [AsyncFunction: generateCreateTxFromDidDetails],
      getSetKeyExtrinsic: [AsyncFunction: getSetKeyExtrinsic],
      getRemoveKeyExtrinsic: [AsyncFunction: getRemoveKeyExtrinsic],
      getAddKeyExtrinsic: [AsyncFunction: getAddKeyExtrinsic],
      getAddEndpointExtrinsic: [AsyncFunction: getAddEndpointExtrinsic],
      getRemoveEndpointExtrinsic: [AsyncFunction: getRemoveEndpointExtrinsic],
      getDeleteDidExtrinsic: [AsyncFunction: getDeleteDidExtrinsic],
      getReclaimDepositExtrinsic: [AsyncFunction: getReclaimDepositExtrinsic],
      generateDidAuthenticatedTx: [AsyncFunction: generateDidAuthenticatedTx],
      encodeDidSignature: [Function: encodeDidSignature]
    },
    Utils: {
      LIGHT_DID_LATEST_VERSION: 1,
      FULL_DID_LATEST_VERSION: 1,
      defaultKeySelectionCallback: [Function: defaultKeySelectionCallback],
      getKiltDidFromIdentifier: [Function: getKiltDidFromIdentifier],
      parseDidUri: [Function: parseDidUri],
      getIdentifierFromKiltDid: [Function: getIdentifierFromKiltDid],
      isSameSubject: [Function: isSameSubject],
      getSigningAlgorithmForVerificationKeyType: [Function: getSigningAlgorithmForVerificationKeyType],
      getVerificationKeyTypeForSigningAlgorithm: [Function: getVerificationKeyTypeForSigningAlgorithm],
      getEncryptionAlgorithmForEncryptionKeyType: [Function: getEncryptionAlgorithmForEncryptionKeyType],
      getEncryptionKeyTypeForEncryptionAlgorithm: [Function: getEncryptionKeyTypeForEncryptionAlgorithm],
      isVerificationKey: [Function: isVerificationKey],
      isEncryptionKey: [Function: isEncryptionKey],
      validateKiltDidUri: [Function: validateKiltDidUri],
      isUri: [Function: isUri],
      isUriFragment: [Function: isUriFragment],
      checkServiceEndpointSyntax: [Function: checkServiceEndpointSyntax],
      checkServiceEndpointSizeConstraints: [Function: checkServiceEndpointSizeConstraints],
      assembleKeyUri: [Function: assembleKeyUri]
    },
    DemoKeystoreUtils: [Getter],
    DemoKeystore: [Getter],
    DidDetails: [Getter],
    LightDidDetails: [Getter],
    FullDidDetails: [Getter],
    DidBatchBuilder: [Getter],
    FullDidBuilder: [Getter],
    FullDidCreationBuilder: [Getter],
    FullDidUpdateBuilder: [Getter],
    exportToDidDocument: [Getter],
    DidDocumentExporter: [Getter],
    resolveDoc: [Getter],
    resolveKey: [Getter],
    resolveServiceEndpoint: [Getter],
    resolve: [Getter],
    DidResolver: [Getter],
    verifyDidSignature: [Getter],
    isDidSignature: [Getter],
    Web3Names: [Getter],
    AccountLinks: [Getter],
    SigningAlgorithms: [Getter],
    EncryptionAlgorithms: [Getter]
  },
  Utils: {
    jsonabc: {
      sort: [Getter],
      sortObj: [Getter],
      cleanJSON: [Getter],
      default: [Object]
    },
    Crypto: {
      encodeAddress: [Getter],
      decodeAddress: [Getter],
      u8aToHex: [Getter],
      u8aConcat: [Getter],
      coToUInt8: [Function: coToUInt8],
      sign: [Function: sign],
      signStr: [Function: signStr],
      verify: [Function: verify],
      hash: [Function: hash],
      hashStr: [Function: hashStr],
      encodeObjectAsStr: [Function: encodeObjectAsStr],
      hashObjectAsStr: [Function: hashObjectAsStr],
      encryptAsymmetric: [Function: encryptAsymmetric],
      encryptAsymmetricAsStr: [Function: encryptAsymmetricAsStr],
      decryptAsymmetric: [Function: decryptAsymmetric],
      decryptAsymmetricAsStr: [Function: decryptAsymmetricAsStr],
      saltedBlake2b256: [Function: saltedBlake2b256],
      hashStatements: [Function: hashStatements]
    },
    UUID: { generate: [Function: generate] },
    DataUtils: {
      validateAddress: [Function: validateAddress],
      validateHash: [Function: validateHash],
      validateSignature: [Function: validateSignature]
    },
    DecoderUtils: {
      codecIsType: [Function: codecIsType],
      assertCodecIsType: [Function: assertCodecIsType]
    },
    SDKErrors: {
      SDKError: [class SDKError extends Error],
      ERROR_UNAUTHORIZED: [class ERROR_UNAUTHORIZED extends SDKError],
      ERROR_CTYPE_HASH_NOT_PROVIDED: [class ERROR_CTYPE_HASH_NOT_PROVIDED extends SDKError],
      ERROR_CTYPE_ID_NOT_MATCHING: [class ERROR_CTYPE_ID_NOT_MATCHING extends SDKError],
      ERROR_CTYPE_PROPERTIES_NOT_MATCHING: [class ERROR_CTYPE_PROPERTIES_NOT_MATCHING extends SDKError],
      ERROR_UNSUPPORTED_KEY: [class ERROR_UNSUPPORTED_KEY extends SDKError],
      ERROR_DID_ERROR: [class ERROR_DID_ERROR extends SDKError],
      ERROR_KEYSTORE_ERROR: [class ERROR_KEYSTORE_ERROR extends SDKError],
      ERROR_DID_EXPORTER_ERROR: [class ERROR_DID_EXPORTER_ERROR extends SDKError],
      ERROR_DID_BUILDER_ERROR: [class ERROR_DID_BUILDER_ERROR extends SDKError],
      ERROR_WEB3_NAME_ERROR: [class ERROR_WEB3_NAME_ERROR extends SDKError],
      ERROR_CLAIM_HASH_NOT_PROVIDED: [class ERROR_CLAIM_HASH_NOT_PROVIDED extends SDKError],
      ERROR_REVOCATION_BIT_MISSING: [class ERROR_REVOCATION_BIT_MISSING extends SDKError],
      ERROR_OWNER_NOT_PROVIDED: [class ERROR_OWNER_NOT_PROVIDED extends SDKError],
      ERROR_ATTESTATION_NOT_PROVIDED: [class ERROR_ATTESTATION_NOT_PROVIDED extends SDKError],
      ERROR_RFA_NOT_PROVIDED: [class ERROR_RFA_NOT_PROVIDED extends SDKError],
      ERROR_LEGITIMATIONS_NOT_PROVIDED: [class ERROR_LEGITIMATIONS_NOT_PROVIDED extends SDKError],
      ERROR_CLAIM_NONCE_MAP_NOT_PROVIDED: [class ERROR_CLAIM_NONCE_MAP_NOT_PROVIDED extends SDKError],
      ERROR_CLAIM_NOT_PROVIDED: [class ERROR_CLAIM_NOT_PROVIDED extends SDKError],
      ERROR_ADDRESS_TYPE: [class ERROR_ADDRESS_TYPE extends SDKError],
      ERROR_HASH_TYPE: [class ERROR_HASH_TYPE extends SDKError],
      ERROR_HASH_MALFORMED: [class ERROR_HASH_MALFORMED extends SDKError],
      ERROR_DELEGATION_ID_TYPE: [class ERROR_DELEGATION_ID_TYPE extends SDKError],
      ERROR_DELEGATION_ID_MISSING: [class ERROR_DELEGATION_ID_MISSING extends SDKError],
      ERROR_DELEGATION_SIGNATURE_MISSING: [class ERROR_DELEGATION_SIGNATURE_MISSING extends SDKError],
      ERROR_INVALID_ROOT_NODE: [class ERROR_INVALID_ROOT_NODE extends SDKError],
      ERROR_INVALID_DELEGATION_NODE: [class ERROR_INVALID_DELEGATION_NODE extends SDKError],
      ERROR_CLAIM_CONTENTS_MALFORMED: [class ERROR_CLAIM_CONTENTS_MALFORMED extends SDKError],
      ERROR_OBJECT_MALFORMED: [class ERROR_OBJECT_MALFORMED extends SDKError],
      ERROR_CTYPE_OWNER_TYPE: [class ERROR_CTYPE_OWNER_TYPE extends SDKError],
      ERROR_QUOTE_MALFORMED: [class ERROR_QUOTE_MALFORMED extends SDKError],
      ERROR_CLAIM_NONCE_MAP_MALFORMED: [class ERROR_CLAIM_NONCE_MAP_MALFORMED extends SDKError],
      ERROR_MESSAGE_BODY_MALFORMED: [class ERROR_MESSAGE_BODY_MALFORMED extends SDKError],
      ERROR_SIGNATURE_DATA_TYPE: [class ERROR_SIGNATURE_DATA_TYPE extends SDKError],
      ERROR_DID_IDENTIFIER_MISMATCH: [class ERROR_DID_IDENTIFIER_MISMATCH extends SDKError],
      ERROR_HIERARCHY_QUERY: [class ERROR_HIERARCHY_QUERY extends SDKError],
      ERROR_INVALID_DID_FORMAT: [class ERROR_INVALID_DID_FORMAT extends SDKError],
      ERROR_UNSUPPORTED_DID: [class ERROR_UNSUPPORTED_DID extends SDKError],
      ERROR_ADDRESS_INVALID: [class ERROR_ADDRESS_INVALID extends SDKError],
      ERROR_LEGITIMATIONS_UNVERIFIABLE: [class ERROR_LEGITIMATIONS_UNVERIFIABLE extends SDKError],
      ERROR_SIGNATURE_UNVERIFIABLE: [class ERROR_SIGNATURE_UNVERIFIABLE extends SDKError],
      ERROR_CREDENTIAL_UNVERIFIABLE: [class ERROR_CREDENTIAL_UNVERIFIABLE extends SDKError],
      ERROR_CLAIM_UNVERIFIABLE: [class ERROR_CLAIM_UNVERIFIABLE extends SDKError],
      ERROR_NESTED_CLAIM_UNVERIFIABLE: [class ERROR_NESTED_CLAIM_UNVERIFIABLE extends SDKError],
      ERROR_IDENTITY_MISMATCH: [class ERROR_IDENTITY_MISMATCH extends SDKError],
      ERROR_WS_ADDRESS_NOT_SET: [class ERROR_WS_ADDRESS_NOT_SET extends SDKError],
      ERROR_ROOT_HASH_UNVERIFIABLE: [class ERROR_ROOT_HASH_UNVERIFIABLE extends SDKError],
      ERROR_DECOMPRESSION_ARRAY: [class ERROR_DECOMPRESSION_ARRAY extends SDKError],
      ERROR_COMPRESS_OBJECT: [class ERROR_COMPRESS_OBJECT extends SDKError],
      ERROR_DECODING_MESSAGE: [class ERROR_DECODING_MESSAGE extends SDKError],
      ERROR_PARSING_MESSAGE: [class ERROR_PARSING_MESSAGE extends SDKError],
      ERROR_TIMEOUT: [class ERROR_TIMEOUT extends SDKError],
      ERROR_INVALID_PROOF_FOR_STATEMENT: [class ERROR_INVALID_PROOF_FOR_STATEMENT extends SDKError],
      ERROR_NO_PROOF_FOR_STATEMENT: [class ERROR_NO_PROOF_FOR_STATEMENT extends SDKError],
      ERROR_CODEC_MISMATCH: [class ERROR_CODEC_MISMATCH extends SDKError]
    },
    JsonSchema: {
      deepCompareStrict: [Getter],
      schemaKeyword: [Getter],
      schemaArrayKeyword: [Getter],
      schemaMapKeyword: [Getter],
      ignoredKeyword: [Getter],
      initialBaseURI: [Getter],
      dereference: [Getter],
      fullFormat: [Getter],
      fastFormat: [Getter],
      encodePointer: [Getter],
      escapePointer: [Getter],
      ucs2length: [Getter],
      validate: [Getter],
      Validator: [Getter]
    },
    Keyring: [Getter]
  },
  Attestation: [Getter],
  AttestationUtils: [Getter],
  Credential: [Getter],
  CredentialUtils: [Getter],
  Balance: [Getter],
  BalanceUtils: [Getter],
  Claim: [Getter],
  ClaimUtils: [Getter],
  CType: [Getter],
  CTypeMetadata: [Getter],
  CTypeSchema: [Getter],
  CTypeUtils: [Getter],
  DelegationNode: [Getter],
  DelegationNodeUtils: [Getter],
  Quote: [Getter],
  QuoteSchema: [Getter],
  QuoteUtils: [Getter],
  RequestForAttestation: [Getter],
  RequestForAttestationUtils: [Getter],
  connect: [Getter],
  disconnect: [Getter],
  config: [Getter],
  init: [Getter],
  SDKErrors: [Getter],
  SubscriptionPromise: [Getter],
  Permission: [Getter],
  MessageBodyType: [Getter],
  KeyRelationship: [Getter],
  VerificationKeyType: [Getter],
  EncryptionKeyType: [Getter],
  SigningAlgorithms: [Getter],
  EncryptionAlgorithms: [Getter],
  DidDocumentPublicKeyType: [Getter],
  VerificationKeyTypesMap: [Getter],
  EncryptionKeyTypesMap: [Getter]
}